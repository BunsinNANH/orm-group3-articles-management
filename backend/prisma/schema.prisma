// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  username String
  password String
  isAdmin Boolean? @map("is_admin") @default(false)
  userRole Role @relation(fields: [roleId], references: [id])
  roleId Int @map("role_id") @default(2) 
  articles Article[]
  profile Profile?
}

model Role {
  id Int @id @default(autoincrement())
  role String
  users User[]
}

model Article {
  id Int @id @default(autoincrement())
  title String
  contents String
  createdBy User @relation(fields: [createdByUserId], references: [id])
  createdByUserId Int @map("created_by_user_id")
  isPublished Boolean @default(false) @map("is_published")
  createdAt DateTime @map("created_at") @default(now()) @db.Timestamptz(3)
  updatedAt DateTime @map("updated_at") @default(now()) @db.Timestamptz(3)
}

model Profile {
  id Int @id @default(autoincrement())
  firstname String
  lastname String
  email String @unique
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int @map("user_id") @unique
  createdAt DateTime @map("created_at") @default(now()) @db.Timestamptz(3)
  updatedAt DateTime @map("updated_at") @default(now()) @db.Timestamptz(3)
}
